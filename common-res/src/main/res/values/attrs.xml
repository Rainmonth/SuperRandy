<?xml version="1.0" encoding="utf-8"?>
<resources>
    <declare-styleable name="RandyPercentageLayout">
        <attr name="rpl_rage" format="float" />
        <attr name="rpl_percentage" format="float" />
    </declare-styleable>
    <declare-styleable name="BorderRoundItemView">
        <attr name="brivWidthPercentage" format="float" />
        <attr name="brivRate" format="float" />
        <attr name="brivTopLeftRadius" format="dimension" />
        <attr name="brivTopRightRadius" format="dimension" />
        <attr name="brivBottomLeftRadius" format="dimension" />
        <attr name="brivBottomRightRadius" format="dimension" />
        <attr name="brivBorderWidth" format="dimension" />
        <attr name="brivBorderColor" format="reference|color" />
        <!--边框的方向-->
        <attr name="brivBorderEnabled" format="boolean" />
        <attr name="brivLeftBorderEnabled" format="boolean" />
        <attr name="brivTopBorderEnabled" format="boolean" />
        <attr name="brivRightBorderEnabled" format="boolean" />
        <attr name="brivBottomBorderEnabled" format="boolean" />
    </declare-styleable>

    <declare-styleable name="RandyRateLayout">
        <attr name="rate" format="float" />
    </declare-styleable>
    <declare-styleable name="RandyRoundLayout">
        <attr name="roundRadius" format="dimension" />
        <attr name="roundRadiusPercentage" format="float" />
        <attr name="roundLeftTopRadius" format="dimension" />
        <attr name="roundRightTopRadius" format="dimension" />
        <attr name="roundLeftBottomRadius" format="dimension" />
        <attr name="roundRightBottomRadius" format="dimension" />
        <attr name="roundHighQuality" format="boolean" />
    </declare-styleable>

    <declare-styleable name="RandyLinearListView">
        <attr name="firstItemSpace" format="dimension" />
        <attr name="lastItemSpace" format="dimension" />
        <attr name="extraItemSpace" format="dimension" />
        <attr name="fixedItemSpace" format="dimension" />
        <attr name="retainStart" format="dimension" />
        <attr name="showItemCount" format="float" />
        <attr name="itemSpace" format="dimension" />
        <attr name="rightItemOffset" format="dimension" />
        <attr name="itemWidth" format="dimension" />
        <attr name="itemLayoutId" format="reference" />
        <attr name="listRate" format="float" />
        <attr name="listItemRate" format="float" />
        <attr name="fixedMode" format="boolean" />
        <attr name="android:orientation" />
    </declare-styleable>
    <declare-styleable name="PullToRefresh">

        <attr name="ptrRefreshableViewBackground" format="reference|color" />
        <attr name="ptrHeaderBackground" format="reference|color" />
        <attr name="ptrHeaderTextColor" format="reference|color" />
        <attr name="ptrHeaderSubTextColor" format="reference|color" />
        <attr name="ptrMode">
            <flag name="disabled" value="0x00000000" />
            <flag name="pullFromStart" value="0x00000001" />
            <flag name="pullFromEnd" value="0x00000002" />
            <flag name="both" value="0x00000003" />
            <flag name="manualOnly" value="0x00000004" />
            <flag name="pullDownFromTop" value="0x00000001" />
            <flag name="pullUpFromBottom" value="0x00000002" />
        </attr>
        <attr name="ptrShowIndicator" format="reference|boolean" />
        <attr name="ptrDrawable" format="reference" />
        <attr name="ptrDrawableStart" format="reference" />
        <attr name="ptrDrawableEnd" format="reference" />
        <attr name="ptrOverScroll" format="reference|boolean" />
        <attr name="ptrHeaderTextAppearance" format="reference" />
        <attr name="ptrSubHeaderTextAppearance" format="reference" />
        <attr name="ptrAnimationStyle">
            <flag name="rotate" value="0x00000000" />
            <flag name="flip" value="0x00000001" />
            <flag name="rotate_and_anim" value="0x00000002" />
            <flag name="pull_arc" value="0x00000003" />
        </attr>
        <attr name="ptrScrollingWhileRefreshingEnabled" format="reference|boolean" />
        <attr name="ptrListViewExtrasEnabled" format="reference|boolean" />
        <attr name="ptrRotateDrawableWhilePulling" format="reference|boolean" />
        <attr name="ptrAdapterViewBackground" format="reference|color" />
        <attr name="ptrDrawableTop" format="reference" />
        <attr name="ptrDrawableBottom" format="reference" />
    </declare-styleable>

    <declare-styleable name="RandyViewPager">
        <attr name="open_mz_mode" format="boolean" />
        <attr name="canLoop" format="boolean" />
        <attr name="indicatorPaddingLeft" format="dimension" />
        <attr name="indicatorPaddingRight" format="dimension" />
        <attr name="indicatorPaddingTop" format="dimension" />
        <attr name="indicatorPaddingBottom" format="dimension" />
        <attr name="indicatorAlign">
            <enum name="left" value="0" />
            <enum name="center" value="1" />
            <enum name="right" value="2" />
        </attr>
        <attr name="middle_page_cover" format="boolean" />
    </declare-styleable>

    <declare-styleable name="Banner">
        <attr name="indicator_width" format="dimension" />
        <attr name="indicator_height" format="dimension" />
        <attr name="indicator_margin" format="dimension" />
        <attr name="indicator_drawable_selected" format="reference" />
        <attr name="indicator_drawable_unselected" format="reference" />
        <attr name="indicator_animator" format="reference" />
        <attr name="indicator_animator_reverse" format="reference" />
    </declare-styleable>

    <declare-styleable name="SwipeBackLayout">
        <attr name="SwipeBackLayoutStyle" format="reference" />
        <attr name="edge_size" format="dimension" />
        <attr name="edge_flag">
            <enum name="left" value="0" />
            <enum name="right" value="1" />
            <enum name="bottom" value="2" />
            <enum name="all" value="3" />
        </attr>
        <attr name="shadow_left" format="reference" />
        <attr name="shadow_right" format="reference" />
        <attr name="shadow_bottom" format="reference" />
    </declare-styleable>

    <!-- SmartTabLayout -->
    <declare-styleable name="stl_SmartTabLayout">
        <attr name="stl_indicatorAlwaysInCenter" format="boolean" />
        <attr name="stl_indicatorInFront" format="boolean" />
        <attr name="stl_indicatorInterpolation" format="enum">
            <enum name="smart" value="0" />
            <enum name="linear" value="1" />
        </attr>
        <attr name="stl_indicatorColor" format="color" />
        <attr name="stl_indicatorColors" format="reference" />
        <attr name="stl_indicatorThickness" format="dimension" />
        <attr name="stl_indicatorCornerRadius" format="dimension" />
        <attr name="stl_underlineColor" format="color" />
        <attr name="stl_underlineThickness" format="dimension" />
        <attr name="stl_dividerColor" format="color" />
        <attr name="stl_dividerColors" format="reference" />
        <attr name="stl_dividerThickness" format="dimension" />
        <attr name="stl_defaultTabTextAllCaps" format="boolean" />
        <attr name="stl_defaultTabTextColor" format="color" />
        <attr name="stl_defaultTabTextSize" format="dimension" />
        <attr name="stl_defaultTabTextHorizontalPadding" format="dimension" />
        <attr name="stl_defaultTabTextMinWidth" format="dimension" />
        <attr name="stl_customTabTextLayoutId" format="reference" />
        <attr name="stl_customTabTextViewId" format="reference" />
        <attr name="stl_distributeEvenly" format="boolean" />
    </declare-styleable>

    <declare-styleable name="RoundedImageView">
        <attr name="riv_corner_radius" format="dimension" />
        <attr name="riv_border_width" format="dimension" />
        <attr name="riv_border_color" format="color" />
        <attr name="riv_mutate_background" format="boolean" />
        <attr name="riv_oval" format="boolean" />
        <attr name="android:scaleType" />
        <attr name="riv_tile_mode">
            <enum name="clamp" value="0" />
            <enum name="repeat" value="1" />
            <enum name="mirror" value="2" />
        </attr>
        <attr name="riv_tile_mode_x">
            <enum name="clamp" value="0" />
            <enum name="repeat" value="1" />
            <enum name="mirror" value="2" />
        </attr>
        <attr name="riv_tile_mode_y">
            <enum name="clamp" value="0" />
            <enum name="repeat" value="1" />
            <enum name="mirror" value="2" />
        </attr>
    </declare-styleable>

    <!-- CircularProgressBar -->
    <declare-styleable name="CircularProgressBar">
        <attr name="cpbStyle" format="reference" />
        <attr name="cpb_color" format="color" />
        <attr name="cpb_colors" format="reference" />
        <attr name="cpb_stroke_width" format="dimension" />
        <attr name="cpb_min_sweep_angle" format="integer" />
        <attr name="cpb_max_sweep_angle" format="integer" />
        <attr name="cpb_sweep_speed" format="float" />
        <attr name="cpb_rotation_speed" format="float" />
    </declare-styleable>

    <!-- PLA_ListView -->
    <attr name="absListViewStyle" format="reference" />
    <attr name="listViewStyle" format="reference" />

    <declare-styleable name="PLAMultiColumnListView">
        <attr name="plaColumnNumber" format="integer" />
        <attr name="plaLandscapeColumnNumber" format="integer" />
        <attr name="plaColumnPaddingLeft" format="dimension" />
        <attr name="plaColumnPaddingRight" format="dimension" />
    </declare-styleable>
    <!--
         Attributes that can be used with a {@link android.view.ViewGroup} or any
         of its subclasses.  Also see {@link #ViewGroup_Layout} for
         attributes that this class processes in its children.
    -->
    <declare-styleable name="ViewGroup">

        <!--
             Defines whether changes in layout (caused by adding and removing items) should
             cause a LayoutTransition to run. When this flag is set to true, a default
             LayoutTransition object will be set on the ViewGroup container and default
             animations will run when these layout changes occur.
        -->
        <attr name="animateLayoutChanges" format="boolean" />
        <!--
             Defines whether a child is limited to draw inside of its bounds or not.
             This is useful with animations that scale the size of the children to more
             than 100% for instance. In such a case, this property should be set to false
             to allow the children to draw outside of their bounds. The default value of
             this property is true.
        -->
        <attr name="clipChildren" format="boolean" />
        <!--
             Defines whether the ViewGroup will clip its drawing surface so as to exclude
             the padding area. This property is set to true by default.
        -->
        <attr name="clipToPadding" format="boolean" />
        <!--
             Defines the layout animation to use the first time the ViewGroup is laid out.
             Layout animations can also be started manually after the first layout.
        -->
        <attr name="layoutAnimation" format="reference" />
        <!--
             Defines whether layout animations should create a drawing cache for their
             children. Enabling the animation cache consumes more memory and requires
             a longer initialization but provides better performance. The animation
             cache is enabled by default.
        -->
        <attr name="animationCache" format="boolean" />
        <!--
             Defines the persistence of the drawing cache. The drawing cache might be
             enabled by a ViewGroup for all its children in specific situations (for
             instance during a scrolling.) This property lets you persist the cache
             in memory after its initial usage. Persisting the cache consumes more
             memory but may prevent frequent garbage collection is the cache is created
             over and over again. By default the persistence is set to scrolling.
        -->
        <attr name="persistentDrawingCache">

            <!-- The drawing cache is not persisted after use. -->
            <flag name="none" value="0x0" />
            <!-- The drawing cache is persisted after a layout animation. -->
            <flag name="animation" value="0x1" />
            <!-- The drawing cache is persisted after a scroll. -->
            <flag name="scrolling" value="0x2" />
            <!-- The drawing cache is always persisted. -->
            <flag name="all" value="0x3" />
        </attr>
        <!--
             Defines whether the ViewGroup should always draw its children using their
             drawing cache or not. The default value is true.
        -->
        <attr name="alwaysDrawnWithCache" format="boolean" />
        <!--
             Sets whether this ViewGroup's drawable states also include
             its children's drawable states.  This is used, for example, to
             make a group appear to be focused when its child EditText or button
             is focused.
        -->
        <attr name="addStatesFromChildren" format="boolean" />

        <!--
             Defines the relationship between the ViewGroup and its descendants
             when looking for a View to take focus.
        -->
        <attr name="descendantFocusability">

            <!-- The ViewGroup will get focus before any of its descendants. -->
            <enum name="beforeDescendants" value="0" />
            <!-- The ViewGroup will get focus only if none of its descendants want it. -->
            <enum name="afterDescendants" value="1" />
            <!-- The ViewGroup will block its descendants from receiving focus. -->
            <enum name="blocksDescendants" value="2" />
        </attr>

        <!--
             Sets whether this ViewGroup should split MotionEvents
             to separate child views during touch event dispatch.
             If false (default), touch events will be dispatched to
             the child view where the first pointer went down until
             the last pointer goes up.
             If true, touch events may be dispatched to multiple children.
             MotionEvents for each pointer will be dispatched to the child
             view where the initial ACTION_DOWN event happened.
             See {@link android.view.ViewGroup#setMotionEventSplittingEnabled(boolean)}
             for more information.
        -->
        <attr name="splitMotionEvents" format="boolean" />
    </declare-styleable>

    <declare-styleable name="AbsListView">

        <!-- Drawable used to indicate the currently selected item in the list. -->
        <attr name="listSelector" format="color|reference" />
        <!--
             When set to true, the selector will be drawn over the selected item.
             Otherwise the selector is drawn behind the selected item. The default
             value is false.
        -->
        <attr name="drawSelectorOnTop" format="boolean" />
        <!-- Used by ListView and GridView to stack their content from the bottom. -->
        <attr name="stackFromBottom" format="boolean" />
        <!--
             When set to true, the list uses a drawing cache during scrolling.
             This makes the rendering faster but uses more memory. The default
             value is true.
        -->
        <attr name="scrollingCache" format="boolean" />
        <!--
             When set to true, the list will filter results as the user types. The
             List's adapter must support the Filterable interface for this to work.
        -->
        <attr name="textFilterEnabled" format="boolean" />
        <!--
             Sets the transcript mode for the list. In transcript mode, the list
             scrolls to the bottom to make new items visible when they are added.
        -->
        <attr name="transcriptMode">

            <!-- Disables transcript mode. This is the default value. -->
            <enum name="disabled" value="0" />
            <!--
                 The list will automatically scroll to the bottom when
                 a data set change notification is received and only if the last item is
                 already visible on screen.
            -->
            <enum name="normal" value="1" />
            <!--
                 The list will automatically scroll to the bottom, no matter what items
                 are currently visible.
            -->
            <enum name="alwaysScroll" value="2" />
        </attr>
        <!--
             Indicates that this list will always be drawn on top of solid, single-color
             opaque background. This allows the list to optimize drawing.
        -->
        <attr name="cacheColorHint" format="color" />
        <!--
             Enables the fast scroll thumb that can be dragged to quickly scroll through
             the list.
        -->
        <attr name="fastScrollEnabled" format="boolean" />
        <!--
             When set to true, the list will use a more refined calculation
             method based on the pixels height of the items visible on screen. This
             property is set to true by default but should be set to false if your adapter
             will display items of varying heights. When this property is set to true and
             your adapter displays items of varying heights, the scrollbar thumb will
             change size as the user scrolls through the list. When set to fale, the list
             will use only the number of items in the adapter and the number of items visible
             on screen to determine the scrollbar's properties.
        -->
        <attr name="smoothScrollbar" format="boolean" />
        <!--
             Defines the choice behavior for the view. By default, lists do not have
             any choice behavior. By setting the choiceMode to singleChoice, the list
             allows up to one item to be in a chosen state. By setting the choiceMode to
             multipleChoice, the list allows any number of items to be chosen.
             Finally, by setting the choiceMode to multipleChoiceModal the list allows
             any number of items to be chosen in a special selection mode.
             The application will supply a
             {@link android.widget.AbsListView.MultiChoiceModeListener} using
             {@link android.widget.AbsListView#setMultiChoiceModeListener} to control the
             selection mode. This uses the {@link android.view.ActionMode} API.
        -->
        <attr name="choiceMode">

            <!-- Normal list that does not indicate choices. -->
            <enum name="none" value="0" />
            <!-- The list allows up to one choice. -->
            <enum name="singleChoice" value="1" />
            <!-- The list allows multiple choices. -->
            <enum name="multipleChoice" value="2" />
            <!-- The list allows multiple choices in a custom selection mode. -->
            <enum name="multipleChoiceModal" value="3" />
        </attr>

        <!--
             When set to true, the list will always show the fast scroll interface.
             This setting implies fastScrollEnabled.
        -->
        <attr name="fastScrollAlwaysVisible" format="boolean" />
    </declare-styleable>

    <declare-styleable name="ListView">

        <!-- Drawable or color to draw between list items. -->
        <!-- <attr name="divider" format="reference|color" /> -->
        <!--
             Height of the divider. Will use the intrinsic height of the divider if this
             is not specified.
        -->
        <attr name="dividerHeight" format="dimension" />
        <!--
             When set to false, the ListView will not draw the divider after each header view.
             The default value is true.
        -->
        <attr name="headerDividersEnabled" format="boolean" />
        <!--
             When set to false, the ListView will not draw the divider before each footer view.
             The default value is true.
        -->
        <attr name="footerDividersEnabled" format="boolean" />
        <!-- Drawable to draw above list content. -->
        <attr name="overScrollHeader" format="reference|color" />
        <!-- Drawable to draw below list content. -->

        <attr name="overScrollFooter" format="reference|color" />

        <attr name="plaContentBackground" format="color" />
    </declare-styleable>

    <attr name="centered" format="boolean" />
    <attr name="selectedColor" format="color" />
    <attr name="strokeWidth" format="dimension" />
    <attr name="unselectedColor" format="color" />
    <attr name="border_width" format="dimension" />
    <attr name="border_color" format="color" />
    <attr name="fillColor" format="color" />
    <attr name="pageColor" format="color" />
    <attr name="radius_p" format="dimension" />
    <attr name="snap" format="boolean" />
    <attr name="strokeColor" format="color" />
    <attr name="horizontalSpacing" format="dimension" />
    <attr name="verticalSpacing" format="dimension" />
    <attr name="orientation">
        <enum name="horizontal" value="0" />
        <enum name="vertical" value="1" />
    </attr>
    <attr name="debugDraw" format="boolean" />
    <attr name="layout_newLine" format="boolean" />
    <attr name="layout_horizontalSpacing" format="dimension" />
    <attr name="layout_verticalSpacing" format="dimension" />
    <attr name="lineWidth" format="dimension" />
    <attr name="gapWidth" format="dimension" />
    <attr name="mode">
        <enum name="left" value="0" />
        <enum name="right" value="1" />
    </attr>
    <attr name="viewAbove" format="reference" />
    <attr name="viewBehind" format="reference" />
    <attr name="behindOffset" format="dimension" />
    <attr name="behindWidth" format="dimension" />
    <attr name="behindScrollScale" format="float" />
    <attr name="touchModeAbove">
        <enum name="margin" value="0" />
        <enum name="fullscreen" value="1" />
    </attr>
    <attr name="touchModeBehind">
        <enum name="margin" value="0" />
        <enum name="fullscreen" value="1" />
    </attr>
    <attr name="shadowDrawable" format="reference" />
    <attr name="shadowWidth" format="dimension" />
    <attr name="fadeEnabled" format="boolean" />
    <attr name="fadeDegree" format="float" />
    <attr name="selectorEnabled" format="boolean" />
    <attr name="selectorDrawable" format="reference" />

    <attr name="clipPadding" format="dimension" />
    <attr name="footerColor" format="color" />
    <attr name="footerLineHeight" format="dimension" />
    <attr name="footerIndicatorStyle">
        <enum name="none" value="0" />
        <enum name="triangle" value="1" />
        <enum name="underline" value="2" />
    </attr>
    <attr name="footerIndicatorHeight" format="dimension" />
    <attr name="footerIndicatorUnderlinePadding" format="dimension" />
    <attr name="footerPadding" format="dimension" />
    <attr name="linePosition">
        <enum name="bottom" value="0" />
        <enum name="top" value="1" />
    </attr>
    <attr name="selectedBold" format="boolean" />
    <attr name="titlePadding" format="dimension" />
    <attr name="topPadding" format="dimension" />
    <attr name="fades" format="boolean" />
    <attr name="fadeDelay" format="integer" />
    <attr name="fadeLength" format="integer" />
    <attr name="vpiCirclePageIndicatorStyle" format="reference" />
    <attr name="vpiIconPageIndicatorStyle" format="reference" />
    <attr name="vpiLinePageIndicatorStyle" format="reference" />
    <attr name="vpiTitlePageIndicatorStyle" format="reference" />
    <attr name="vpiTabPageIndicatorStyle" format="reference" />
    <attr name="vpiUnderlinePageIndicatorStyle" format="reference" />
    <attr name="radius" format="integer" />
</resources>